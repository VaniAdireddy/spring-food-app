spring.application.name=spring-food-app

#TODO DOCKER DATABASE CONNECTION
server.port=8998

#spring.datasource.password=${DB_USERNAME=root}
#spring.datasource.username=${DB_PASSWORD=root}
#spring.datasource.url=jdbc:mysql://${DB_HOST=mysql}/${DB_NAME=k8s}?useSSL=false
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true

#spring.datasource.url=jdbc:mysql://mysqldb:3307/k8s
#spring.datasource.username=root
#spring.datasource.password=root

#TODO LOCAL DATABASE CONNECTION
#spring.datasource.url=jdbc:mysql://localhost:3306/foodapp
#spring.datasource.username=root
#spring.datasource.password=raju
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform

 TODO AWS RDS DATABASE CONNECTION
spring.datasource.url=jdbc:mysql://database-one.c5u6c62qgth3.us-east-1.rds.amazonaws.com/spring
spring.datasource.username=root
spring.datasource.password=srinu1234
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jdbc.show-sql=true
##logging.level.org.hibernate=DEBUG

#todo Oauth2Client
#spring.security.oauth2.client.registration.github.client-id=Ov23liASWYMZwakQpCvp
#spring.security.oauth2.client.registration.github.client-secret=ed66ed7878dac3515dac6c0b1f5a1ab3b1858b4f
#logging.level.org.springframework.security=TRACE

# Logging
#logging.level.org.springframework=ERROR
#logging.level.com.numericaideas=DEBUG
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#todo actuator to cheque application
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
spring.main.allow-bean-definition-overriding=true

#TODO  H2 database
#spring.datasource.url=jdbc:h2:mem:test
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=srinu
#spring.datasource.password=
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2.console
#spring.datasource.url=jdbc:mysql://localhost:8998/springboot
##spring.datasource.url=jdbc:mysql://spring-boot-application-demo.c5gs8ey0ghui.us-east-1.rds.amazonaws.com:3306/springboot




#TODO INSTALL AND DEPLOY IN DOCKER-> IMP
#1 docker pull MySQL:latest
#2 docker network create spring-network-mysql
#3 docker network ls
#4 docker run --name mysqldb --network spring-network-mysql -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=foodapp -e MYSQL_USER=spring -e MYSQL_PASSWORD=root -d mysql:latest
#5 docker exec -it containerfastthreenumber bash
#6 mysql -uspring -proot
#7 spring.datasource.url=jdbc:mysqldb://localhost:3306/foodapp ->>change MySQL container name
#spring.datasource.username=spring
#spring.datasource.password=root
#8 clean mvn -> install Jarfile
#9 FROM openjdk:17
#EXPOSE 8080
#COPY target/docker-spring-image.jar .
#ENTRYPOINT ["java","-jar","/docker-spring-image.jar"]
#10 docker build -t docker-spring-image .
#11 docker run --network spring-network-MySQL --name springboot-container -p 8998:8998 -d repositeryname
#12 docker tag docker-spring-image:latest srinu641/kubernates ->optional
#docker push srinu641/kubernates:latest
